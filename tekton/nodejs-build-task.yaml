apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: nodejs-build-task-b
spec:
  inputs:
    params:
    - default: /workspace/extracted/Dockerfile
      name: pathToDockerFile
      type: string
    - default: /workspace/extracted
      name: pathToContext
      type: string
    resources:
    - name: git-source
      type: git
  outputs:
    resources:
    - name: docker-image
      outputImageDir: /builder/home/image-outputs/docker-image
      type: image
  steps:
  - args:
    - -c
    - /extract.sh
    command:
    - /bin/bash
    env:
    - name: gitsource
      value: git-source
    image: appsody/appsody-buildah
    name: assemble-extract
    resources: {}
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
  - args:
    - -c
    - /validate.sh
    command:
    - /bin/bash
    env:
    - name: gitsource
      value: git-source
    image: kabanero/validate-collection
    name: validate-collection-is-active
    resources: {}
    securityContext:
      privileged: true
  - command:
    - buildah
    - bud
    - --tls-verify=false
    - --format=docker
    - -f
    - $(inputs.params.pathToDockerFile)
    - -t
    - $(outputs.resources.docker-image.url)
    - $(inputs.params.pathToContext)
    env:
    - name: gitsource
      value: git-source
    image: appsody/appsody-buildah
    name: build-bud
    resources: {}
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
  - command:
    - buildah
    - push
    - --tls-verify=false
    - $(outputs.resources.docker-image.url)
    - docker://$(outputs.resources.docker-image.url)
    env:
    - name: gitsource
      value: git-source
    image: appsody/appsody-buildah
    name: build-push
    resources: {}
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
  volumes:
  - emptyDir: {}
    name: varlibcontainers
